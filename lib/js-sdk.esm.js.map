{"version":3,"file":"js-sdk.esm.js","sources":["../src/PGBridge/constants/index.ts","../src/PGBridge/common/tool.ts","../src/PGBridge/model/BaseBridge.ts","../src/PGBridge/model/BlurrrIosBridge.ts","../src/PGBridge/model/BlurrrWebBridge.ts","../src/PGBridge/index.ts","../src/index.ts"],"sourcesContent":["/**\n * # 客户端通讯支持的事件类型\n */\nexport enum EBridgeType {\n  CLOSE = 'closeWebView', // 关闭H5\n  GET_USER_INFO = 'getUserInfo', // 获取用户信息\n  LOGIN = 'doLogin', // 登录\n  GET_COMMON_PARAMS = 'getCommonParams', // 获取公共参数\n  SAVE_FILE = 'saveImageToAlbum', // 保存文件(到相册)\n  QR_CODE_PARSER = 'callQRParser', // 二维码解析\n  SIGN = 'sign', // 签名\n  SET_BAR_STATUS = 'setNativeBarStatus', // 设置app状态栏是否显示\n  SHOW_TOAST = 'showHint', // 客户端toast提示信息\n  QR_CODE_CLOSE = 'closeQRParser', // 关闭二维码扫描\n  SET_LOADING = 'setLoadingStatus', // 设置相册loading效果显示状态\n  CALL_PHOTO_PICKER = 'callPhotoPicker', // 调起Blurrr图片/视频选中页面 //! DELETE\n  PURCHASE = 'purchase', // 购买订单\n  GET_APP_PRODUCT_INFO = 'getIAPProductInfo', // 查询应用内购买商品信息\n  REPORT_EVENT = 'reportEvent', // 埋点上报\n  START_QR_SCAN = 'startQRScan', // 开始扫描\n  STOP_QR_SCAN = 'stopQRScan', // 暂停扫描\n  REFRESH_CLIENT_DATA = 'refreshUserProjectsAndPresets', // 刷新客户端数据\n  GET_CURRENT_ENV = 'getCurrentEnv', //获取当前环境\n  GET_H5_CACHE = 'getH5Cache', //获取H5缓存\n  SET_H5_CACHE = 'setH5Cache', //设置H5缓存\n  PLAY_VIDEO = 'playVideo',\n}\n\n\nexport enum Environment {\n  Prod = \"release\",\n  QA = \"qa\",\n  Dev = \"dev\",\n  Pre = \"operation\",\n}","/**\n * # 将字符串序列化\n * @param data\n * @returns\n */\nexport function JSONParse(data: string) {\n  try {\n    return JSON.parse(data);\n  } catch {\n    return data;\n  }\n}\n\n/**\n * # 将json数据字符串化\n * @param data\n * @returns\n */\nexport function JSONStringify(data: string | object) {\n  if (typeof data === 'string') {\n    return data;\n  }\n  try {\n    return JSON.stringify(data);\n  } catch {\n    return '';\n  }\n}\n","import { JSONParse, JSONStringify } from '../common/tool';\nimport { EBridgeType, Environment } from '../constants';\nimport { IBridge, IVideoPlayProps, TBridgeConfigProps } from '../types/bridge';\n\n/**\n * # 客户端通讯 基础Model\n */\nexport class BaseBridge implements IBridge {\n  /**\n   * # 获取客户端注入的方法\n   * @param type EBridgeType\n   * @returns Function\n   * @remark 一般只需要重构 get 和 execute 方法来实现不同平台的兼容\n   */\n  get(type: EBridgeType) {\n    return window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers[type]?.postMessage;\n  }\n\n  /**\n   * # 执行客户端注入的方法\n   * @param type EBridgeType\n   * @param type string\n   * @remark 一般只需要重构 get 和 execute 方法来实现不同平台的兼容\n   */\n  execute(type: EBridgeType, dataStr: string) {\n    return window.webkit.messageHandlers[type].postMessage(dataStr);\n  }\n\n  /**\n   * ID递增的索引\n   */\n  private IDIndex = 0;\n  /**\n   * # 获取Bridge中的唯一ID\n   * @return string\n   */\n  getUniqueID() {\n    return `callback_${this.IDIndex++}`;\n  }\n\n  /**\n   * # 执行客户端注入的方法\n   * @param type EBridgeType\n   * @param dataStr JSONString\n   * @returns\n   */\n  bridgeCall(type: EBridgeType, data: TJson = {}, config: TBridgeConfigProps = {}): Promise<any> {\n    if (typeof this.get(type) !== 'function') {\n      console.error(new Error(`不存在type为${type}的方法可供调用！`));\n      return Promise.reject({ message: `invalid ${type} method` });\n    }\n    return new Promise((resolve, reject) => {\n      try {\n        let newPayload = {\n          ...data,\n        };\n        const { hasCallback = true, callbackFun: defaultFun } = config;\n        let callbackFun;\n        if (hasCallback) {\n          const callbackName: string = this.getUniqueID();\n          newPayload.callback = callbackName;\n          if (typeof defaultFun != 'function') {\n            callbackFun = (data: any) => {\n              // 回调完成后删除全局注入的callback\n              const res = JSONParse(data);\n              resolve(res);\n              window[callbackName] = null;\n              return res;\n            };\n          } else {\n            callbackFun = defaultFun;\n          }\n          window[callbackName] = callbackFun;\n        }\n        let payloadStr = JSONStringify(newPayload);\n        this.execute(type, payloadStr);\n        if (typeof defaultFun == 'function') {\n          resolve({});\n        }\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * ---------------------------------------\n   * 以下为具体方法的实现\n   * ---------------------------------------\n   */\n\n  /**\n   * # 关闭webview页面\n   */\n  closePage() {\n    this.bridgeCall(EBridgeType.CLOSE, {}, { hasCallback: false });\n  }\n\n  /**\n   * # 获取用户信息\n   */\n  getUserInfo() {\n    return this.bridgeCall(EBridgeType.GET_USER_INFO);\n  }\n\n  /**\n   * # 用户登录\n   */\n  login() {\n    return this.bridgeCall(EBridgeType.LOGIN);\n  }\n\n  /**\n   * # 获取客户端的公共参数\n   */\n  getCommonParams(defaultParams?:TObjectKey): Promise<TJson> {\n    return this.bridgeCall(EBridgeType.GET_COMMON_PARAMS);\n  }\n\n  /**\n   * # 通过链接保存文件到本地\n   * @param url string\n   */\n  saveFileByUrl(url: string) {\n    return this.bridgeCall(EBridgeType.SAVE_FILE, {\n      type: 'url',\n      data: url,\n    });\n  }\n\n  /**\n   * # 通过base64保存文件到本地\n   * @param base64 string\n   */\n  saveFileByBase64(base64: string) {\n    return this.bridgeCall(EBridgeType.SAVE_FILE, {\n      type: 'base64',\n      data: base64,\n    });\n  }\n\n  /**\n   * # 扫码\n   * @remark QR_CODE_PARSER\n   */\n  qrCodeOpen(callback: Function) {\n    return this.bridgeCall(\n      EBridgeType.QR_CODE_PARSER,\n      {},\n      {\n        callbackFun: callback,\n      },\n    );\n  }\n\n  /**\n   * # 关闭扫码\n   * @remark QR_CODE_CLOSE\n   */\n  qrCodeClose() {\n    return this.bridgeCall(EBridgeType.QR_CODE_CLOSE);\n  }\n\n  /**\n   * # 暂停扫码\n   * @remark STOP_QR_SCAN\n   */\n  qrCodeStop() {\n    return this.bridgeCall(EBridgeType.STOP_QR_SCAN);\n  }\n\n  /**\n   * # 开始扫码\n   * @remark START_QR_SCAN\n   */\n  qrCodeStart() {\n    return this.bridgeCall(EBridgeType.START_QR_SCAN);\n  }\n\n  /**\n   * # 对请求进行签名\n   */\n  sign(data: TJson) {\n    return this.bridgeCall(EBridgeType.SIGN, data);\n  }\n\n  /**\n   * # 隐藏客户端的导航\n   */\n  hideBar() {\n    return this.bridgeCall(\n      EBridgeType.SET_BAR_STATUS,\n      {\n        status: false,\n      },\n      {\n        hasCallback: false,\n      },\n    );\n  }\n\n  /**\n   * # 显示客户端的导航\n   */\n  showBar() {\n    return this.bridgeCall(\n      EBridgeType.SET_BAR_STATUS,\n      {\n        status: true,\n      },\n      {\n        hasCallback: false,\n      },\n    );\n  }\n\n  /**\n   * # 调用客户端轻提示\n   */\n  showToast(text: string) {\n    return this.bridgeCall(EBridgeType.SHOW_TOAST, {\n      text,\n    });\n  }\n\n  /**\n   * # 调用客户端Loading\n   */\n  showLoading() {\n    return this.bridgeCall(EBridgeType.SET_LOADING, {\n      status: true,\n    });\n  }\n\n  /**\n   * # 隐藏客户端Loading\n   */\n  hideLoading() {\n    return this.bridgeCall(EBridgeType.SET_LOADING, {\n      status: false,\n    });\n  }\n\n  /**\n   * # 购买订单\n   * @alpha 目前只有camera360实现\n   */\n  purchase(productId: string, method: 'iap' | 'wechat' | 'alipay') {\n    return this.bridgeCall(EBridgeType.PURCHASE, {\n      productId,\n      method,\n    });\n  }\n\n  /**\n   * # 获取商品信息\n   * @alpha 目前只有camera360实现\n   */\n  getAppProductInfo(productId: string) {\n    return this.bridgeCall(EBridgeType.GET_APP_PRODUCT_INFO, {\n      productId,\n    });\n  }\n\n  /**\n   * # 埋点上报\n   */\n  reportEvent(data: TJson) {\n    return this.bridgeCall(EBridgeType.REPORT_EVENT, data, {\n      hasCallback: false,\n    });\n  }\n\n  /**\n   * # 刷新客户端数据\n   * @remark 保存的工程和预设，关闭页面返回客户端时需要刷新数据\n   */\n  refreshApp() {\n    return this.bridgeCall(\n      EBridgeType.REFRESH_CLIENT_DATA,\n      {},\n      {\n        hasCallback: false,\n      },\n    );\n  }\n\n  /**\n   * # 获取当前环境\n   */\n  getEnvironment() {\n    return this.bridgeCall(EBridgeType.GET_CURRENT_ENV) as Promise<Environment>;\n  }\n\n  /**\n   * # 获取H5的缓存\n   * @param key 变量key\n   * @returns 变量存储的值\n   */\n  getCache(key?: string) {\n    try {\n      return this.bridgeCall(EBridgeType.GET_H5_CACHE).then((res) => {\n        const cache = JSONParse(res || '{}') || {};\n        return Promise.resolve(key ? cache[key] : cache);\n      });\n    } catch (e) {\n      console.error(e);\n      return Promise.reject(e);\n    }\n  }\n\n  /**\n   * # 设置H5的缓存\n   * @param key 变量key\n   * @param value 变量值\n   * @returns\n   */\n  setCache(key: string, value: any) {\n    return this.getCache().then((cache) => {\n      const newCache = Object.assign({}, cache, { [key]: value });\n      return this.bridgeCall(EBridgeType.SET_H5_CACHE, {\n        body: JSONStringify(newCache),\n      });\n    });\n  }\n\n  /**\n   * # 清空H5缓存\n   * @returns\n   */\n  clearCache() {\n    return this.bridgeCall(EBridgeType.SET_H5_CACHE, {\n      body: JSONStringify({}),\n    });\n  }\n\n  /**\n   * # 唤起客户端的视频播放\n   */\n  async playVideoByApp(data: IVideoPlayProps) {\n    return this.bridgeCall(EBridgeType.PLAY_VIDEO, { data });\n  }\n}\n","import { EBridgeType } from '../constants';\nimport { IBridge } from '../types/bridge';\nimport { BaseBridge } from './BaseBridge';\n\nexport default class BlurrrIosBridge extends BaseBridge implements IBridge {\n  /**\n   * # 获取客户端注入的方法\n   * @param type EBridgeType\n   * @returns Function\n   * @remark 一般只需要重构 get 和 execute方法来实现不同平台的兼容\n   */\n  get(type: EBridgeType) {\n    return window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers[type]?.postMessage;\n  }\n}\n","import { JSONParse, JSONStringify } from \"../common/tool\";\nimport { EBridgeType, Environment } from \"../constants\";\nimport { IBridge } from \"../types/bridge\";\nimport { BaseBridge } from \"./BaseBridge\";\n\nexport default class BlurrrWebBridge extends BaseBridge implements IBridge {\n  get(type: EBridgeType) {\n    return () => {};\n  }\n\n  execute(type: EBridgeType, dataStr: string) {\n    console.warn(`H5模式下，不支持${type}方法的调用！`);\n  }\n\n  getUserInfo() {\n    return Promise.resolve({\n      vip: \"no\",\n      hasFreeTicketToReceive: true,\n      collectedFreeTicketsCount: 0,\n      freeTicketCountConfig: 888,\n      balanceInvite: 0,\n      isLogin: true,\n      isVip: true,\n      isBindApple: false,\n      userId: \"6501190edd88ea45697c59c5\",\n      vipExpireTime: \"0\",\n      avater: \"http://cloudcdn.c360dn.com/b02c799359294fb3fe054fa3baa7b38a-200\",\n      presetTotalIncome: 9,\n      presetCount: 96,\n      nickname: \"文闪\",\n      balanceJuice: 28,\n      userToken:\n        \"V1RSRldueUpGV3lkTnAwR0lleDJtL2V5RUY1ZHlSeUJVNWphQWFESWtqWEVsL3BtVU9DVk1oU3M5c1pWR0UzOUhTZEhYOXA2SW95a09uZ0ZwY2p4cGVGWWl0T21TZktodzdpSE1FMzVnRXFpZVFTbmE1cVhxbHFRUWFpMVdWTmpHcGVKN2p2TEFWbW50NXg0QXRzVUhxN1UxelNHUlN5Tw==\",\n    });\n  }\n\n  login() {\n    return this.getUserInfo();\n  }\n\n  async getCommonParams(defaultParams) {\n    const env = await this.getEnvironment();\n    const params = defaultParams ? defaultParams : {};\n    return Promise.resolve({\n      \"PG-AppID\": \"VideoBeats\",\n      \"PG-AppVersion\": \"1.9.00\",\n      \"PG-Channel\": \"toolchain\",\n      \"PG-DataEnv\": env,\n      \"PG-Debug\": \"0\",\n      \"PG-EID\":\n        \"d241c0694472aebc739d509eb740d52e3d6fc2021f9d71e0c6371fe91afbf51f96db1c91453b376a60f0d0e702cff2ab\",\n      \"PG-ENCB\": \"0\",\n      \"PG-ENCH\": \"0\",\n      \"PG-FA\": \"6f97129290a3e4c7c340154b9c30c431\",\n      \"PG-InitStamp\": \"1700039392\",\n      \"PG-Language\": \"zh-Hans\",\n      \"PG-Locale\": \"zh_CN\",\n      \"PG-Model\": \"iPad11,3\",\n      \"PG-Network\": \"WIFI\",\n      \"PG-OSVersion\": \"15.4.1\",\n      \"PG-Platform\": \"iOS\",\n      \"PG-ScreenSize\": \"834.0*1112.0\",\n      \"PG-Time\": \"1702620070\",\n      \"PG-UpgradeStamp\": \"1702547225\",\n      \"PG-UserID\": \"6501190edd88ea45697c59c5\",\n      \"PG-UserToken\":\n        \"V1RSRldueUpGV3lkTnAwR0lleDJtL2V5RUY1ZHlSeUJVNWphQWFESWtqWEVsL3BtVU9DVk1oU3M5c1pWR0UzOUhTZEhYOXA2SW95a09uZ0ZwY2p4cGVGWWl0T21TZktodzdpSE1FMzVnRXFpZVFTbmE1cVhxbHFRUWFpMVdWTmpHcGVKN2p2TEFWbW50NXg0QXRzVUhxN1UxelNHUlN5Tw==\",\n      \"PG-UtcOffset\": \"28800\",\n      ...params,\n    });\n  }\n\n  sign(data: TJson) {\n    return Promise.resolve(\"56610f9fce1cdd07098cd81d\");\n  }\n\n  showToast(text: string) {\n    alert(text);\n    return Promise.resolve();\n  }\n\n  getEnvironment() {\n    const hostname = location.hostname;\n    let env;\n    if (hostname.includes(\"-dev\") || hostname.startsWith(\"local\") || hostname.startsWith(\"1\")) {\n      env = Environment.Dev;\n    } else if (hostname.includes(\"-qa\")) {\n      env = Environment.QA;\n    } else {\n      env = Environment.Prod;\n    }\n    return Promise.resolve(env);\n  }\n\n  getCache(key?: string) {\n    try {\n      const str = localStorage.getItem(\"BRIDGE_WEB_CACHE\");\n      if (!str) {\n        return Promise.resolve();\n      }\n      const data = JSONParse(str);\n      return Promise.resolve(key ? data[key] : data);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n\n  setCache(key: string, value: any) {\n    return this.getCache().then((cache) => {\n      const newCache = Object.assign({}, cache, { [key]: value });\n      localStorage.setItem(\"BRIDGE_WEB_CACHE\", JSONStringify(newCache));\n      return value;\n    });\n  }\n\n  clearCache() {\n    localStorage.removeItem(\"BRIDGE_WEB_CACHE\");\n    return Promise.resolve();\n  }\n}\n","import { EBridgeType } from './constants';\nimport { BaseBridge } from './model/BaseBridge';\nimport BlurrrIosBridge from './model/BlurrrIosBridge';\nimport BlurrrWebBridge from './model/BlurrrWebBridge';\nimport { IBridge } from './types/bridge';\n\nclass PGBridge {\n  static bridgeMap = {\n    'blurrr-ios': BlurrrIosBridge,\n    'blurrr-web': BlurrrWebBridge,\n  };\n\n  static EBridgeType = EBridgeType;\n\n  static createBridge(app: string, platform: string = this.getPlatform()): IBridge {\n    const bridgeKey = `${app}-${platform}` as ObjectKeys<typeof PGBridge.bridgeMap>;\n    const bridgeConstructor = PGBridge.bridgeMap[bridgeKey];\n    if(!bridgeConstructor) {\n      console.error(`未找到${bridgeKey}的Bridge，已使用兜底方案，请进行适配!`)\n      return new BaseBridge()\n    }\n    return new bridgeConstructor();\n  }\n\n  static getPlatform() {\n    if (window.webkit) {\n      // TODO: 这里只能判断是否webkit，等后续有了安卓再判断ios和安卓\n      return 'ios';\n    }\n    return 'web';\n  }\n}\n\nexport default PGBridge;\n","/*\n * @Author: komens\n * @Date: 2023-04-02 20:57:42\n * @LastEditTime: 2023-05-04 17:41:44\n * @LastEditors: komens\n */\n\nimport bridge from \"./PGBridge\";\n\nexport const PGBridge = bridge;\n\nexport default {\n  bridge,\n};\n"],"names":["EBridgeType","Environment","JSONParse","data","JSON","parse","_a","JSONStringify","stringify","BaseBridge","this","IDIndex","prototype","get","type","window","webkit","messageHandlers","postMessage","execute","dataStr","getUniqueID","bridgeCall","config","_this","console","error","Error","concat","Promise","reject","message","resolve","newPayload","__assign","hasCallback","defaultFun","callbackFun","callbackName_1","callback","res","payloadStr","err","closePage","CLOSE","getUserInfo","GET_USER_INFO","login","LOGIN","getCommonParams","defaultParams","GET_COMMON_PARAMS","saveFileByUrl","url","SAVE_FILE","saveFileByBase64","base64","qrCodeOpen","QR_CODE_PARSER","qrCodeClose","QR_CODE_CLOSE","qrCodeStop","STOP_QR_SCAN","qrCodeStart","START_QR_SCAN","sign","SIGN","hideBar","SET_BAR_STATUS","status","showBar","showToast","text","SHOW_TOAST","showLoading","SET_LOADING","hideLoading","purchase","productId","method","PURCHASE","getAppProductInfo","GET_APP_PRODUCT_INFO","reportEvent","REPORT_EVENT","refreshApp","REFRESH_CLIENT_DATA","getEnvironment","GET_CURRENT_ENV","getCache","key","GET_H5_CACHE","then","cache","e","setCache","value","newCache","Object","assign","SET_H5_CACHE","body","clearCache","playVideoByApp","PLAY_VIDEO","BlurrrIosBridge","_super","__extends","BlurrrWebBridge","warn","vip","hasFreeTicketToReceive","collectedFreeTicketsCount","freeTicketCountConfig","balanceInvite","isLogin","isVip","isBindApple","userId","vipExpireTime","avater","presetTotalIncome","presetCount","nickname","balanceJuice","userToken","env","sent","params","alert","hostname","location","includes","startsWith","Dev","QA","Prod","str","localStorage","getItem","setItem","removeItem","PGBridge","createBridge","app","platform","getPlatform","bridgeKey","bridgeConstructor","bridgeMap","bridge","index"],"mappings":"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"}