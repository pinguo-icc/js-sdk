{"version":3,"file":"pg-tools.common.js","sources":["../src/tools/json.ts","../src/bridge/constants.ts","../src/bridge/index.ts","../src/index.ts"],"sourcesContent":["/*\n * @Author: komens\n * @Date: 2023-04-24 09:44:26\n * @LastEditTime: 2023-04-24 09:44:27\n * @LastEditors: komens\n */\n/**\n * 将字符串序列化\n * @param data\n * @returns\n */\nexport function JSONParse(data: string) {\n  try {\n    return JSON.parse(data);\n  } catch {\n    return data;\n  }\n}\n\n/**\n * 将json数据字符串化\n * @param data\n * @returns\n */\nexport function JSONStringify(data: string | object) {\n  if (typeof data === \"string\") {\n    return data;\n  }\n  try {\n    return JSON.stringify(data);\n  } catch {\n    return \"\";\n  }\n}\n\nexport default {\n  parse: JSONParse,\n  stringify: JSONStringify,\n};\n","/*\n * @Author: komens\n * @Date: 2023-04-24 09:40:08\n * @LastEditTime: 2023-04-24 09:40:09\n * @LastEditors: komens\n */\nexport enum EBridgeType {\n  CLOSE = \"closeWebView\", // 关闭H5\n  GET_USER_INFO = \"getUserInfo\", // 获取用户信息\n  LOGIN = \"doLogin\", // 登录\n  GET_COMMON_PARAMS = \"getCommonParams\", // 获取公共参数\n  SAVE_FILE = \"saveImageToAlbum\", // 保存文件(到相册)\n  QR_CODE_PARSER = \"callQRParser\", // 二维码解析\n  SIGN = \"sign\", // 签名\n  SET_BAR_STATUS = \"setNativeBarStatus\", // 设置app状态栏是否显示\n  SHOW_TOAST = \"showHint\", // 客户端toast提示信息\n  QR_CODE_CLOSE = \"closeQRParser\", // 关闭二维码扫描\n  SET_LOADING = \"setLoadingStatus\", // 设置相册loading效果显示状态\n  CALL_PHOTO_PICKER = \"callPhotoPicker\", // 调起Blurrr图片/视频选中页面\n  REPORT_EVENT = \"reportEvent\", // 埋点上报\n  PURCHASE = \"purchase\", // 购买订单\n  GET_APP_PRODUCT_INFO = \"getIAPProductInfo\", // 查询应用内购买商品信息\n  PURCHASE_COMPLETE = \"completePurchase\", // 可消耗商品完成处理\n  SET_STORAGE = \"setH5Cache\", // 设置应用内缓存\n  GET_STORAGE = \"getH5Cache\", // 获取应用内缓存\n  SET_INPUT_FILE_ATTRIBUTES = \"setInputFileAttributes\", // 设置文件上传属性\n}\n","/*\n * @Author: komens\n * @Date: 2023-04-24 09:38:40\n * @LastEditTime: 2023-05-04 18:00:56\n * @LastEditors: komens\n */\n\nimport Json from \"../tools/json\";\nimport _ from \"lodash\";\nimport { TBridgeCallProps, TBridgeType } from \"./types/bridge\";\nimport { EBridgeType } from \"./constants\";\n\n/**\n * 获取客户端注入的方法\n * @param type EBridgeType\n * @returns boolean\n */\nexport function getClientInjectMethod(type: string) {\n  try {\n    if (window.PG_CONSTANTS.platform === \"ios\") {\n      return (\n        window.webkit &&\n        window.webkit.messageHandlers &&\n        window.webkit.messageHandlers[type]?.postMessage\n      );\n    }\n    return window.androidClient && window.androidClient[type];\n  } catch {\n    return false;\n  }\n}\n\n/**\n * 执行客户端注入的方法\n * @param type EBridgeType\n * @param dataStr JSONString\n * @returns JSONString\n */\nfunction executeClientMethod(type: string, dataStr: string) {\n  try {\n    if (window.PG_CONSTANTS.platform === \"ios\") {\n      // 如果是ios先拿ios的数据\n      if (\n        window.webkit &&\n        window.webkit.messageHandlers &&\n        window.webkit.messageHandlers[type]?.postMessage\n      ) {\n        return (\n          window.webkit &&\n          window.webkit.messageHandlers &&\n          window.webkit.messageHandlers[type]?.postMessage(dataStr)\n        );\n      } else if (window._debug) {\n        // 如果没有且是debug模式则拿模拟数据\n        return (\n          window.androidClient && window.androidClient[type] && window.androidClient[type](dataStr)\n        );\n      }\n    }\n    return (\n      window.androidClient && window.androidClient[type] && window.androidClient[type](dataStr)\n    );\n  } catch {}\n}\n\n// 调用bridge与客户端通讯\n//! window.webkit.messageHandlers[type]?.postMessage 不可简写，一定要一级一级写全\nexport function bridgeCall({ type, data = {}, callback = true }: TBridgeCallProps) {\n  const realType = EBridgeType[type] as string;\n  // @TODO 有可能有问题，如果放在这的话整个页面都进不去，客户看不到效果图\n  if (typeof getClientInjectMethod(realType) !== \"function\" && !window._debug) {\n    console.error(new Error(`不存在type为${realType}的方法可供调用！`));\n    return Promise.reject();\n  }\n  // 针对callback的处理\n  return new Promise((resolve, reject) => {\n    try {\n      let newData;\n      newData = {\n        ...data,\n      };\n      if (callback) {\n        const callbackName: string = _.uniqueId(\"callback_\");\n        newData.callback = callbackName;\n        const callbackFun = (data: any) => {\n          // 回调完成后删除全局注入的callback\n          window[callbackName] = null;\n\n          //android 回调由于是函数名拼接字符串，转化过程中有问题，所以android统一使用object作为参数\n          if (typeof data == \"string\") {\n            data = Json.parse(data);\n          }\n          resolve(data);\n          return data;\n        };\n        window[callbackName] = callbackFun;\n      }\n      let payloadStr = Json.stringify(newData);\n      executeClientMethod(realType, payloadStr);\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nexport default {\n  run: bridgeCall,\n};\n","/*\n * @Author: komens\n * @Date: 2023-04-02 20:57:42\n * @LastEditTime: 2023-05-04 17:41:44\n * @LastEditors: komens\n */\n\nimport bridge from \"./bridge\";\n\nexport const PGBridge = bridge;\n\nexport default {\n  bridge,\n};\n"],"names":["EBridgeType","Json","parse","data","JSON","_a","stringify","bridge","run","type","_b","_c","callback","realType","window","PG_CONSTANTS","platform","webkit","messageHandlers","postMessage","androidClient","getClientInjectMethod","_debug","Promise","resolve","reject","newData","__assign","callbackName_1","_","uniqueId","payloadStr","dataStr","executeClientMethod","err","console","error","Error","concat","PGBridge","index"],"mappings":"uXAmCA,IC7BYA,ED6BGC,EAAA,CACbC,MAzBI,SAAoBC,GACxB,IACE,OAAOC,KAAKF,MAAMC,EACnB,CAAC,MAAME,GACN,OAAOF,CACR,CACH,EAoBEG,UAbI,SAAwBH,GAC5B,GAAoB,iBAATA,EACT,OAAOA,EAET,IACE,OAAOC,KAAKE,UAAUH,EACvB,CAAC,MAAME,GACN,MAAO,EACR,CACH,IC3BA,SAAYL,GACVA,EAAA,MAAA,eACAA,EAAA,cAAA,cACAA,EAAA,MAAA,UACAA,EAAA,kBAAA,kBACAA,EAAA,UAAA,mBACAA,EAAA,eAAA,eACAA,EAAA,KAAA,OACAA,EAAA,eAAA,qBACAA,EAAA,WAAA,WACAA,EAAA,cAAA,gBACAA,EAAA,YAAA,mBACAA,EAAA,kBAAA,kBACAA,EAAA,aAAA,cACAA,EAAA,SAAA,WACAA,EAAA,qBAAA,oBACAA,EAAA,kBAAA,mBACAA,EAAA,YAAA,aACAA,EAAA,YAAA,aACAA,EAAA,0BAAA,wBACD,CApBD,CAAYA,IAAAA,EAoBX,CAAA,IC+ED,IAAeO,EAAA,CACbC;;AAvCI,SAAqBH,GAAE,IAAAI,EAAIJ,EAAAI,KAAEC,EAASL,EAAAF,KAATA,OAAO,IAAAO,EAAA,CAAE,EAAAA,EAAEC,EAAeN,EAAAO,SAAfA,OAAQ,IAAAD,GAAOA,EACrDE,EAAWb,EAAYS,GAE7B,MAA+C,mBArD3C,SAAgCA,SACpC,IACE,MAAqC,QAAjCK,OAAOC,aAAaC,SAEpBF,OAAOG,QACPH,OAAOG,OAAOC,kBACuB,QAArCb,EAAAS,OAAOG,OAAOC,gBAAgBT,UAAO,IAAAJ,OAAA,EAAAA,EAAAc,aAGlCL,OAAOM,eAAiBN,OAAOM,cAAcX,EACrD,CAAC,MAAMC,GACN,OAAO,CACR,CACH,CAwCaW,CAAsBR,IAA6BC,OAAOQ,OAK9D,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IACE,IAAIC,SAIJ,GAHAA,EAAOC,EAAA,GACFxB,GAEDS,EAAU,CACZ,IAAMgB,EAAuBC,EAAAA,QAAEC,SAAS,aACxCJ,EAAQd,SAAWgB,EAYnBd,OAAOc,GAXa,SAACzB,GASnB,OAPAW,OAAOc,GAAgB,KAGJ,iBAARzB,IACTA,EAAOF,EAAKC,MAAMC,IAEpBqB,EAAQrB,GACDA,CACT,CAED,CACD,IAAI4B,EAAa9B,EAAKK,UAAUoB,IA3DtC,SAA6BjB,EAAcuB,WACzC,IACE,GAAqC,QAAjClB,OAAOC,aAAaC,SAAoB,CAE1C,GACEF,OAAOG,QACPH,OAAOG,OAAOC,kBACqB,QAAnCb,EAAAS,OAAOG,OAAOC,gBAAgBT,UAAK,IAAAJ,OAAA,EAAAA,EAAEc,aAErC,OACEL,OAAOG,QACPH,OAAOG,OAAOC,kBACqB,QAAnCR,EAAAI,OAAOG,OAAOC,gBAAgBT,UAAK,IAAAC,OAAA,EAAAA,EAAES,YAAYa,IAE9C,GAAIlB,OAAOQ,OAEhB,OACER,OAAOM,eAAiBN,OAAOM,cAAcX,IAASK,OAAOM,cAAcX,GAAMuB,EAGtF,CACD,OACElB,OAAOM,eAAiBN,OAAOM,cAAcX,IAASK,OAAOM,cAAcX,GAAMuB,EAEpF,CAAC,MAAArB,GAAQ,CACZ,CAmCMsB,CAAoBpB,EAAUkB,EAC/B,CAAC,MAAOG,GACPT,EAAOS,EACR,CACH,KA/BEC,QAAQC,MAAM,IAAIC,MAAM,WAAAC,OAAWzB,EAAQ,cACpCU,QAAQE,SA+BnB,GC9Fac,EAAWhC,EAETiC,EAAA,CACbjC,OAAMA"}