import { EBridgeType } from "../constants";
import { IBaseBridge } from "../types/baseBridge";
import { BaseBridge } from "./BaseBridge";
export default class BlurrrWebBridge extends BaseBridge implements IBaseBridge {
    get(type: EBridgeType): () => void;
    execute(type: EBridgeType, dataStr: string): void;
    getUserInfo(): Promise<{
        vip: string;
        hasFreeTicketToReceive: boolean;
        collectedFreeTicketsCount: number;
        freeTicketCountConfig: number;
        balanceInvite: number;
        isLogin: boolean;
        isVip: boolean;
        isBindApple: boolean;
        userId: string;
        vipExpireTime: string;
        avater: string;
        presetTotalIncome: number;
        presetCount: number;
        nickname: string;
        balanceJuice: number;
        userToken: string;
    }>;
    login(): Promise<{
        vip: string;
        hasFreeTicketToReceive: boolean;
        collectedFreeTicketsCount: number;
        freeTicketCountConfig: number;
        balanceInvite: number;
        isLogin: boolean;
        isVip: boolean;
        isBindApple: boolean;
        userId: string;
        vipExpireTime: string;
        avater: string;
        presetTotalIncome: number;
        presetCount: number;
        nickname: string;
        balanceJuice: number;
        userToken: string;
    }>;
    getCommonParams(defaultParams: any): Promise<any>;
    sign(data: TJson): Promise<string>;
    showToast(text: string): Promise<void>;
    getEnvironment(): Promise<any>;
    getCache(key?: string): Promise<any>;
    setCache(key: string, value: any): Promise<any>;
    clearCache(): Promise<void>;
}
